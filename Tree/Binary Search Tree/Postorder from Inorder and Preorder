public class Order {
    int[] preorder, inorder;
    int[] nodePlacement;
    int[] result;

    void build(int e1, int e2, int s1, int s2, int j1, int j2) {
        if (e1 > e2) return;
        int node = preorder[e1];
        result[j2] = node;
        int spot = solmunKohta[node];
        int amount = spot-s1;
        muodosta(e1+1,e1+1+amount-1,s1,s1+amount-1,j1,j1+amount-1);
        muodosta(e1+1+amount,e2,spot+1,s2,j1+spot,j2-1);
    }

    public int[] postorder(int[] preorder, int[] inorder) {
        this.preorder = preorder;
        this.inorder = inorder;
        int n = preorder.length;
        nodePlacement = new int[n+1];
        result = new int[n];
        for (int i = 0; i < n; i++) {
            nodePlacement[inorder[i]] = i;
        }
        build(0,n-1,0,n-1,0,n-1);
        return result;
    }
}
